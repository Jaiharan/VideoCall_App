{"ast":null,"code":"import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream } from \"engine.io-parser\";\nexport class WT extends Transport {\n  get name() {\n    return \"webtransport\";\n  }\n\n  doOpen() {\n    // @ts-ignore\n    if (typeof WebTransport !== \"function\") {\n      return;\n    } // @ts-ignore\n\n\n    this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n    this.transport.closed.then(() => {\n      this.onClose();\n    }).catch(err => {\n      this.onError(\"webtransport error\", err);\n    }); // note: we could have used async/await, but that would require some additional polyfills\n\n    this.transport.ready.then(() => {\n      this.transport.createBidirectionalStream().then(stream => {\n        const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n        const reader = stream.readable.pipeThrough(decoderStream).getReader();\n        const encoderStream = createPacketEncoderStream();\n        encoderStream.readable.pipeTo(stream.writable);\n        this.writer = encoderStream.writable.getWriter();\n\n        const read = () => {\n          reader.read().then(_ref => {\n            let {\n              done,\n              value\n            } = _ref;\n\n            if (done) {\n              return;\n            }\n\n            this.onPacket(value);\n            read();\n          }).catch(err => {});\n        };\n\n        read();\n        const packet = {\n          type: \"open\"\n        };\n\n        if (this.query.sid) {\n          packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n        }\n\n        this.writer.write(packet).then(() => this.onOpen());\n      });\n    });\n  }\n\n  write(packets) {\n    this.writable = false;\n\n    for (let i = 0; i < packets.length; i++) {\n      const packet = packets[i];\n      const lastPacket = i === packets.length - 1;\n      this.writer.write(packet).then(() => {\n        if (lastPacket) {\n          nextTick(() => {\n            this.writable = true;\n            this.emitReserved(\"drain\");\n          }, this.setTimeoutFn);\n        }\n      });\n    }\n  }\n\n  doClose() {\n    var _a;\n\n    (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n  }\n\n}","map":{"version":3,"names":["Transport","nextTick","createPacketDecoderStream","createPacketEncoderStream","WT","name","doOpen","WebTransport","transport","createUri","opts","transportOptions","closed","then","onClose","catch","err","onError","ready","createBidirectionalStream","stream","decoderStream","Number","MAX_SAFE_INTEGER","socket","binaryType","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","writable","writer","getWriter","read","done","value","onPacket","packet","type","query","sid","data","write","onOpen","packets","i","length","lastPacket","emitReserved","setTimeoutFn","doClose","_a","close"],"sources":["C:/Users/manju/Desktop/Codes/jaiharan.github.io/VideoCall_App/client/node_modules/engine.io-client/build/esm/transports/webtransport.js"],"sourcesContent":["import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}